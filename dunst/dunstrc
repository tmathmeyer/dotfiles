# vim: set ft=dunstrc:
[global]
font = FantasqueSansMono 11
#font = Inconsolata 9

# allow a small subset of html markup:
allow_markup = yes

format = "%s\n%b %p"

# Sort messages by urgency
sort = yes

# Show how many messages are currently hidden (because of geometry)
indicate_hidden = no

# alignment of message text.
# Possible values are "left", "center" and "right"
alignment = center

# The frequency with wich text that is longer than the notification
# window allows bounces back and forth.
# This option conflicts with 'word_wrap'.
# Set to 0 to disable
bounce_freq = word_wrap

# show age of message if message is older than show_age_threshold seconds.
# set to -1 to disable
show_age_threshold = 20

# split notifications into multiple lines if they don't fit into geometry
word_wrap = yes

# ignore newlines '\n' in notifications
ignore_newline = no


# the geometry of the window
# geometry [{width}]x{height}][+/-{x}+/-{y}]
# The geometry of the message window.
# The height is measured in number of notifications everything else in pixels. If the width
# is omitted but the height is given ("-geometry x2"), the message window
# expands over the whole screen (dmenu-like). If width is 0,
# the window expands to the longest message displayed.
# A positive x is measured from the left, a negative from the
# right side of the screen.  Y is measured from the top and down respectevly.
# The width can be negative. In this case the actual width is the
# screen width minus the width defined in within the geometry option.
geometry = "250x30-16+41"

# The transparency of the window. range: [0; 100]
# This option will only work if a compositing windowmanager is present (e.g. xcompmgr, compiz, etc..)
transparency = 0

# Don't remove messages, if the user is idle (no mouse or keyboard input)
# for longer than idle_threshold seconds.
# Set to 0 to disable.
idle_threshold = 0

# Which monitor should the notifications be displayed on.
monitor = 0

#follow {mouse} {keyboard} {none}
follow = none

# should a notification popped up from history be sticky or
# timeout as if it would normally do.
sticky_history = no

# The height of a single line. If the height is smaller than the font height,
# it will get raised to the font height.
# This adds empty space above and under the text.
line_height = 2

# Draw a line of 'separatpr_height' pixel height between two notifications.
# Set to 0 to disable
separator_height = 2

# padding between text and separator
padding = 8

# horizontal padding
horizontal_padding = 8

# Define a color for the separator.
# possible values are:
#  * auto: dunst tries to find a color fitting to the background
#  * foreground: use the same color as the foreground
#  * frame: use the same color as the frame.
#  * anything else will be interpreted as a X color
separator_color = frame

# print a notification on startup
# This is mainly for error detection, since dbus (re-)starts dunst
# automatically after a crash.
startup_notification = false

# dmenu path
dmenu = /usr/bin/dmenu -p dunst:

# browser for opening urls in context menu
browser = /usr/bin/chromium -new-tab

[frame]
width = 2
color = "#69e1d3"

[shortcuts]
# shortcuts are specified as [modifier+][modifier+]...key
# available modifiers are 'ctrl', 'mod1' (the alt-key), 'mod2', 'mod3'
# and 'mod4' (windows-key)
# xev might be helpful to find names for keys

# close notification
close = ctrl+space

# close all notifications
close_all = ctrl+shift+space

# redisplay last message(s)
# On the US keyboard layout 'grave' is normally above TAB and left of '1'.
history = ctrl+grave

# context menu
context = ctrl+shift+period

[urgency_low]
# IMPORTANT: colors have to be defined in quotation marks.
# Otherwise the '#' and following  would be interpreted as a comment.
background = "#ccffcc"
foreground = "#000000"
timeout = 80

[urgency_normal]
background = "#115454"
foreground = "#00ff00"
timeout = 80

[urgency_critical]
background = "#AC3C3C"
foreground = "#0000ff"
timeout = 80

